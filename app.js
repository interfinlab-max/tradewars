// –ò–≥—Ä–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const gameData = {
  baseState: {
    gdpIdx: 100.0,
    expIdx: 100.0,
    impIdx: 100.0,
    cpi: 2.0,
    unemployment: 5.0
  },
  stepsTotal: 15,
  countries: {
    RU: {
      name: "–†–æ—Å—Å–∏—è",
      flag: "üá∑üá∫",
      specialties: ["—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞", "—Å—ã—Ä—å—ë", "IT", "–æ–±–æ—Ä–æ–Ω–ø—Ä–æ–º"],
      modifiers: { gdpIdx: 0, expIdx: 5, impIdx: -3, cpi: 0.5, unemployment: 1.0 }
    },
    US: {
      name: "–°–®–ê",
      flag: "üá∫üá∏",
      specialties: ["—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "—Ñ–∏–Ω–∞–Ω—Å—ã", "—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞", "–∞–≥—Ä–æ–ø—Ä–æ–º"],
      modifiers: { gdpIdx: 10, expIdx: 0, impIdx: 10, cpi: -0.3, unemployment: -0.5 }
    },
    CN: {
      name: "–ö–∏—Ç–∞–π",
      flag: "üá®üá≥",
      specialties: ["–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ", "—ç–∫—Å–ø–æ—Ä—Ç", "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "–∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞"],
      modifiers: { gdpIdx: 8, expIdx: 15, impIdx: 5, cpi: 0.2, unemployment: -1.5 }
    },
    DE: {
      name: "–ì–µ—Ä–º–∞–Ω–∏—è",
      flag: "üá©üá™",
      specialties: ["–∞–≤—Ç–æ–ø—Ä–æ–º", "–º–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ", "—Ö–∏–º–∏—è", "—ç–∫—Å–ø–æ—Ä—Ç"],
      modifiers: { gdpIdx: 5, expIdx: 8, impIdx: 3, cpi: -0.5, unemployment: -1.0 }
    },
    JP: {
      name: "–Ø–ø–æ–Ω–∏—è",
      flag: "üáØüáµ",
      specialties: ["—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "–∞–≤—Ç–æ–ø—Ä–æ–º", "—Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞", "—Ç–æ—á–Ω–æ–µ –º–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ"],
      modifiers: { gdpIdx: 3, expIdx: 5, impIdx: 8, cpi: -0.8, unemployment: -0.3 }
    },
    BR: {
      name: "–ë—Ä–∞–∑–∏–ª–∏—è",
      flag: "üáßüá∑",
      specialties: ["–∞–≥—Ä–æ–ø—Ä–æ–º", "—Å—ã—Ä—å—ë", "—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞", "–º–µ—Ç–∞–ª–ª—É—Ä–≥–∏—è"],
      modifiers: { gdpIdx: -2, expIdx: 3, impIdx: -5, cpi: 1.5, unemployment: 2.0 }
    }
  },
  trustWeights: {
    "–ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã": 8, "–ø—Ä–∞–≤–æ": 7, "–æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å": 7, "–¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è": 6, "—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å": 5, 
    "—Å—É–±—Å–∏–¥–∏–∏": 2, "–¥–∏–ø–ª–æ–º–∞—Ç–∏—è": 6, "–º–Ω–æ–≥–æ—Å—Ç–æ—Ä–æ–Ω–Ω–æ—Å—Ç—å": 7, "–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏": 5,
    "—Å–∞–Ω–∫—Ü–∏–∏": -6, "—Ç–µ—Ö–∫–æ–Ω—Ç—Ä–æ–ª—å": -5, "—ç—Å–∫–∞–ª–∞—Ü–∏—è": -8, "–∫–≤–æ—Ç—ã": -6, "–ø—Ä–æ—Ç–µ–∫—Ü–∏–æ–Ω–∏–∑–º": -7, 
    "—Ç–∞—Ä–∏—Ñ—ã": -4, "–∏–∑–æ–ª—è—Ü–∏—è": -9, "–æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–æ—Å—Ç—å": -6, "–∞–≤—Ç–∞—Ä–∫–∏—è": -8
  }
};

// –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ (67 –æ–±—â–∏—Ö + —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω—ã)
const scenarios = {
  general: [
    {
      id: "steel-dumping", text: "–î–µ–º–ø–∏–Ω–≥ —Å—Ç–∞–ª–∏ –¥–∞–≤–∏—Ç –Ω–∞ –æ—Ç—Ä–∞—Å–ª—å. –ß—Ç–æ –¥–µ–ª–∞–µ–º?",
      choices: [
        { id: "high-tariff", icon: "fa-solid fa-industry", label: "–í—ã—Å–æ–∫–∏–µ —Ç–∞—Ä–∏—Ñ—ã (–Ω–∞—Ü–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)", 
          hint: "–ë—ã—Å—Ç—Ä–∞—è –∑–∞—â–∏—Ç–∞ ‚Üí —Ä–∏—Å–∫ –æ—Ç–≤–µ—Ç–Ω—ã—Ö –º–µ—Ä", effect: { gdp: -1.3, exp: -1.9, imp: -2.5, cpi: 0.3, unemployment: -0.5 }, 
          tags: ["—Ç–∞—Ä–∏—Ñ—ã", "—ç—Å–∫–∞–ª–∞—Ü–∏—è"], history: "–°–®–ê –≤ 2018 –≤–≤–µ–ª–∏ ¬´232¬ª –ø–æ—à–ª–∏–Ω—ã; —á–∞—Å—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ –æ—Ç–≤–µ—Ç–∏–ª–∞." },
        { id: "anti-dumping", icon: "fa-solid fa-scale-balanced", label: "–ê–Ω—Ç–∏–¥–µ–º–ø–∏–Ω–≥–æ–≤—ã–µ –º–µ—Ä—ã (—Ç–æ—á–µ—á–Ω–æ)", 
          hint: "–°–ª–µ–¥—É–µ–º –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º –∏ —Ç–∞—Ä–≥–µ—Ç–∏—Ä—É–µ–º", effect: { gdp: 0.3, exp: -0.4, imp: -1.0, cpi: 0.1, unemployment: -0.2 }, 
          tags: ["–ø—Ä–∞–≤–æ"], history: "–ï–° –ø—Ä–∏–º–µ–Ω—è–µ—Ç –∞–Ω—Ç–∏–¥–µ–º–ø–∏–Ω–≥ –∫ —Å—Ç–∞–ª–∏ ‚Äî –∑–∞—â–∏—Ç–∞ –±–µ–∑ –ø–æ–¥–æ—Ä–æ–∂–∞–Ω–∏—è." },
        { id: "wait-see", icon: "fa-regular fa-clock", label: "–í—ã–∂–∏–¥–∞—Ç—å", 
          hint: "–¶–µ–Ω—ã –Ω–∏–∑–∫–∏–µ, –Ω–æ –æ—Ç—Ä–∞—Å–ª—å —Å—Ç—Ä–∞–¥–∞–µ—Ç", effect: { gdp: -0.6, exp: 0.0, imp: 1.5, cpi: -0.2, unemployment: 0.8 }, 
          tags: ["–≤—ã–∂–∏–¥–∞–Ω–∏–µ"], history: "–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–º–ø–∏–Ω–≥–∞ ‚Üí –ø–∞–¥–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏/–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –∏–º–ø–æ—Ä—Ç–∞." }
      ]
    },
    {
      id: "sanctions-tech", text: "–°–æ—é–∑–Ω–∏–∫–∏ –æ–±—Å—É–∂–¥–∞—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –≤—ã—Å–æ–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∂—ë—Å—Ç–∫–∏–π –ø–∞–∫–µ—Ç?",
      choices: [
        { id: "full-controls", icon: "fa-solid fa-microchip", label: "–°—Ç—Ä–æ–≥–∏–µ —Ç–µ—Ö–∫–æ–Ω—Ç—Ä–æ–ª–∏", 
          hint: "–£–¥–∞—Ä –ø–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—é/–ü–û", effect: { gdp: -0.5, exp: -1.0, imp: -0.8, cpi: 0.2, unemployment: 0.3 }, 
          tags: ["—Å–∞–Ω–∫—Ü–∏–∏", "—Ç–µ—Ö–∫–æ–Ω—Ç—Ä–æ–ª—å"], history: "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è 2022‚Äì2023 —Å–Ω–∏–∂–∞–ª–∏ —ç–∫—Å–ø–æ—Ä—Ç –∏ —É—Å–ª–æ–∂–Ω—è–ª–∏ —Å–µ—Ä–≤–∏—Å." },
        { id: "partial-controls", icon: "fa-solid fa-sliders", label: "–¢–æ—á–µ—á–Ω—ã–µ –∫–æ–Ω—Ç—Ä–æ–ª—ã", 
          hint: "–°—É–∂–∞–µ–º –¥–æ –í–ü–ö", effect: { gdp: 0.1, exp: -0.3, imp: -0.2, cpi: 0.1, unemployment: 0.0 }, 
          tags: ["–ø—Ä–∞–≤–æ", "—Ç–µ—Ö–∫–æ–Ω—Ç—Ä–æ–ª—å"], history: "–ò–∑–±–∏—Ä–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —Å–Ω–∏–∂–∞–µ—Ç –ø–æ–±–æ—á–Ω—ã–π —É—â–µ—Ä–±." }
      ]
    },
    {
      id: "energy-crisis", text: "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –∫—Ä–∏–∑–∏—Å: —Ü–µ–Ω—ã –Ω–∞ –≥–∞–∑ –≤—ã—Ä–æ—Å–ª–∏ –≤ 3 —Ä–∞–∑–∞. –í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è?",
      choices: [
        { id: "subsidies-energy", icon: "fa-solid fa-fire", label: "–°—É–±—Å–∏–¥–∏—Ä–æ–≤–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é", 
          hint: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±–∏–∑–Ω–µ—Å–∞ –∏ –Ω–∞—Å–µ–ª–µ–Ω–∏—è", effect: { gdp: 0.8, exp: 0.5, imp: 2.0, cpi: -0.5, unemployment: -1.2 }, 
          tags: ["—Å—É–±—Å–∏–¥–∏–∏"], history: "–ï–≤—Ä–æ–ø–∞ –≤ 2022 —Å—É–±—Å–∏–¥–∏—Ä–æ–≤–∞–ª–∞ —ç–Ω–µ—Ä–≥–∏—é –Ω–∞ —Å–æ—Ç–Ω–∏ –º–ª—Ä–¥ –µ–≤—Ä–æ." },
        { id: "market-forces", icon: "fa-solid fa-chart-line", label: "–ü–æ–∑–≤–æ–ª–∏—Ç—å —Ä—ã–Ω–∫—É –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è", 
          hint: "–í—ã—Å–æ–∫–∏–µ —Ü–µ–Ω—ã —Å—Ç–∏–º—É–ª–∏—Ä—É—é—Ç —ç–∫–æ–Ω–æ–º–∏—é", effect: { gdp: -2.1, exp: -1.5, imp: -0.5, cpi: 1.8, unemployment: 2.5 }, 
          tags: ["–æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å"], history: "–°–≤–æ–±–æ–¥–Ω—ã–π —Ä—ã–Ω–æ–∫ –≤–µ–¥–µ—Ç –∫ –±–æ–ª–µ–∑–Ω–µ–Ω–Ω–æ–π, –Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏." },
        { id: "strategic-reserves", icon: "fa-solid fa-warehouse", label: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∑–µ—Ä–≤—ã", 
          hint: "–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ", effect: { gdp: 0.3, exp: 0.0, imp: 0.5, cpi: -0.8, unemployment: -0.3 }, 
          tags: ["—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å"], history: "–°–®–ê –∏ –ï–° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ä–µ–∑–µ—Ä–≤—ã –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ —Ü–µ–Ω." }
      ]
    },
    {
      id: "trade-war", text: "–¢–æ—Ä–≥–æ–≤–∞—è –≤–æ–π–Ω–∞ —ç—Å–∫–∞–ª–∏—Ä—É–µ—Ç: –ø–∞—Ä—Ç–Ω—ë—Ä —É–≥—Ä–æ–∂–∞–µ—Ç –ø–æ—à–ª–∏–Ω–∞–º–∏ –Ω–∞ $200 –º–ª—Ä–¥ —Ç–æ–≤–∞—Ä–æ–≤.",
      choices: [
        { id: "retaliate", icon: "fa-solid fa-fist-raised", label: "–°–∏–º–º–µ—Ç—Ä–∏—á–Ω—ã–π –æ—Ç–≤–µ—Ç", 
          hint: "–û–∫–æ –∑–∞ –æ–∫–æ", effect: { gdp: -1.8, exp: -2.3, imp: -1.7, cpi: 0.9, unemployment: 1.4 }, 
          tags: ["—ç—Å–∫–∞–ª–∞—Ü–∏—è", "—Ç–∞—Ä–∏—Ñ—ã"], history: "–¢–æ—Ä–≥–æ–≤–∞—è –≤–æ–π–Ω–∞ –°–®–ê-–ö–∏—Ç–∞–π 2018-2020 –ø—Ä–∏–≤–µ–ª–∞ –∫ –≤–∑–∞–∏–º–Ω—ã–º –ø–æ—Ç–µ—Ä—è–º." },
        { id: "negotiate", icon: "fa-solid fa-handshake", label: "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã", 
          hint: "–ü–æ–∏—Å–∫ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å–∞", effect: { gdp: 0.4, exp: 0.8, imp: 0.6, cpi: -0.2, unemployment: -0.5 }, 
          tags: ["–ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã", "–æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å"], history: "–î–∏–ø–ª–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è —á–∞—Å—Ç–æ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ —ç—Å–∫–∞–ª–∞—Ü–∏–∏." }
      ]
    },
    {
      id: "wto-dispute", text: "–í –í–¢–û –ø–æ–¥–∞–Ω–∞ –∂–∞–ª–æ–±–∞ –Ω–∞ –Ω–∞—à–∏ —Å—É–±—Å–∏–¥–∏–∏. –ö–∞–∫ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å?",
      choices: [
        { id: "defend-subsidies", icon: "fa-solid fa-shield", label: "–ó–∞—â–∏—â–∞—Ç—å —Å—É–±—Å–∏–¥–∏–∏", 
          hint: "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã –≤–∞–∂–Ω–µ–µ", effect: { gdp: 0.5, exp: 0.8, imp: -0.3, cpi: 0.2, unemployment: -0.8 }, 
          tags: ["–ø—Ä–æ—Ç–µ–∫—Ü–∏–æ–Ω–∏–∑–º"], history: "–ú–Ω–æ–≥–∏–µ —Å—Ç—Ä–∞–Ω—ã –∑–∞—â–∏—â–∞—é—Ç —Å–≤–æ–∏ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ —Å—É–±—Å–∏–¥–∏–∏ –≤ –í–¢–û." },
        { id: "comply-wto", icon: "fa-solid fa-balance-scale", label: "–°–æ–±–ª—é–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –í–¢–û", 
          hint: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–µ –ø—Ä–∞–≤–æ –ø—Ä–µ–≤—ã—à–µ –≤—Å–µ–≥–æ", effect: { gdp: -0.8, exp: -0.5, imp: 0.5, cpi: -0.1, unemployment: 1.2 }, 
          tags: ["–ø—Ä–∞–≤–æ", "–æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å"], history: "–°–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –í–¢–û —É–∫—Ä–µ–ø–ª—è—é—Ç –¥–æ–≤–µ—Ä–∏–µ –∫ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ." }
      ]
    },
    {
      id: "supply-chain-crisis", text: "–ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫—Ä–∏–∑–∏—Å —Ü–µ–ø–æ—á–µ–∫ –ø–æ—Å—Ç–∞–≤–æ–∫. –ó–∞–≤–æ–¥—ã –ø—Ä–æ—Å—Ç–∞–∏–≤–∞—é—Ç –∏–∑-–∑–∞ –Ω–µ—Ö–≤–∞—Ç–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.",
      choices: [
        { id: "onshoring", icon: "fa-solid fa-home", label: "–°—Ç–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—à–æ—Ä–∏–Ω–≥", 
          hint: "–í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –¥–æ–º–æ–π", effect: { gdp: -1.2, exp: -0.8, imp: -3.5, cpi: 1.5, unemployment: -1.8 }, 
          tags: ["—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å", "—Å—É–±—Å–∏–¥–∏–∏"], history: "COVID-19 –∑–∞—Å—Ç–∞–≤–∏–ª –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –ê–∑–∏–∏." },
        { id: "diversify-suppliers", icon: "fa-solid fa-network-wired", label: "–î–∏–≤–µ—Ä—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤", 
          hint: "–°–Ω–∏–∂–∞–µ–º —Ä–∏—Å–∫–∏ —á–µ—Ä–µ–∑ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ", effect: { gdp: 0.5, exp: 1.2, imp: 0.8, cpi: 0.3, unemployment: -0.4 }, 
          tags: ["–¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è", "–æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å"], history: "\"–ö–∏—Ç–∞–π+1\" —Å—Ç—Ä–∞—Ç–µ–≥–∏—è —Å–Ω–∏–∂–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –æ–¥–Ω–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞." }
      ]
    },
    {
      id: "digital-services-tax", text: "–ï–° —Ç—Ä–µ–±—É–µ—Ç –Ω–∞–ª–æ–≥ –Ω–∞ —Ü–∏—Ñ—Ä–æ–≤—ã–µ —É—Å–ª—É–≥–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –≥–∏–≥–∞–Ω—Ç–æ–≤. –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å?",
      choices: [
        { id: "support-dst", icon: "fa-solid fa-laptop-code", label: "–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–π –Ω–∞–ª–æ–≥", 
          hint: "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–µ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏–µ", effect: { gdp: -0.3, exp: -0.8, imp: 0.2, cpi: 0.1, unemployment: 0.1 }, 
          tags: ["–ø—Ä–∞–≤–æ", "–º–Ω–æ–≥–æ—Å—Ç–æ—Ä–æ–Ω–Ω–æ—Å—Ç—å"], history: "–§—Ä–∞–Ω—Ü–∏—è –ø–µ—Ä–≤–æ–π –≤–≤–µ–ª–∞ –Ω–∞–ª–æ–≥ –Ω–∞ —Ü–∏—Ñ—Ä–æ–≤—ã–µ —É—Å–ª—É–≥–∏ –≤ 2019." },
        { id: "oppose-dst", icon: "fa-solid fa-times-circle", label: "–ü—Ä–æ—Ç–∏–≤–æ—Å—Ç–æ—è—Ç—å –Ω–∞–ª–æ–≥—É", 
          hint: "–ó–∞—â–∏—â–∞–µ–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–µ–∫—Ç–æ—Ä", effect: { gdp: 0.8, exp: 1.5, imp: -0.1, cpi: -0.2, unemployment: -0.4 }, 
          tags: ["–ø—Ä–æ—Ç–µ–∫—Ü–∏–æ–Ω–∏–∑–º"], history: "–°–®–ê —É–≥—Ä–æ–∂–∞–ª–∏ –ø–æ—à–ª–∏–Ω–∞–º–∏ —Å—Ç—Ä–∞–Ω–∞–º, –≤–≤–æ–¥—è—â–∏–º —Ü–∏—Ñ—Ä–æ–≤—ã–µ –Ω–∞–ª–æ–≥–∏." }
      ]
    }
  ],
  specific: {
    RU: [
      {
        id: "oil-price-shock-ru", text: "üá∑üá∫ –¶–µ–Ω—ã –Ω–∞ –Ω–µ—Ñ—Ç—å —É–ø–∞–ª–∏ –Ω–∞ 40%. –ö–∞–∫ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —ç–∫–æ–Ω–æ–º–∏–∫—É?", country: "RU",
        choices: [
          { id: "devalue-ruble", icon: "fa-solid fa-ruble-sign", label: "–û—Å–ª–∞–±–∏—Ç—å —Ä—É–±–ª—å –¥–ª—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏", 
            hint: "–î–µ–≤–∞–ª—å–≤–∞—Ü–∏—è –ø–æ–º–æ–∂–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç—É", effect: { gdp: 0.5, exp: 2.0, imp: -1.5, cpi: 1.0, unemployment: -0.3 }, 
            tags: ["–¥–µ–≤–∞–ª—å–≤–∞—Ü–∏—è"], history: "–†–æ—Å—Å–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞ –¥–µ–≤–∞–ª—å–≤–∞—Ü–∏—é –≤ 2014-2015 –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –∫ —Å–∞–Ω–∫—Ü–∏—è–º." },
          { id: "reserve-fund", icon: "fa-solid fa-piggy-bank", label: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –§–æ–Ω–¥ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–ª–∞–≥–æ—Å–æ—Å—Ç–æ—è–Ω–∏—è", 
            hint: "–ü–æ—Ç—Ä–∞—Ç–∏—Ç—å —Ä–µ–∑–µ—Ä–≤—ã –Ω–∞ —Å—Ç–∏–º—É–ª—ã", effect: { gdp: 1.2, exp: 0.3, imp: 0.5, cpi: 0.8, unemployment: -1.5 }, 
            tags: ["—Å—É–±—Å–∏–¥–∏–∏", "—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å"], history: "–§–ù–ë —Å–æ–∑–¥–∞–Ω –∏–º–µ–Ω–Ω–æ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —ç–∫–æ–Ω–æ–º–∏–∫–∏ –≤ –∫—Ä–∏–∑–∏—Å–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã." }
        ]
      }
    ],
    US: [
      {
        id: "tech-antitrust-us", text: "üá∫üá∏ –ê–Ω—Ç–∏–º–æ–Ω–æ–ø–æ–ª—å–Ω–æ–µ –¥–µ–ª–æ –ø—Ä–æ—Ç–∏–≤ —Ç–µ—Ö–Ω–æ–≥–∏–≥–∞–Ω—Ç–æ–≤. –†–∞–∑–±–∏–≤–∞—Ç—å –∫–æ–º–ø–∞–Ω–∏–∏?", country: "US",
        choices: [
          { id: "break-up-tech", icon: "fa-solid fa-hammer", label: "–†–∞–∑–¥–µ–ª–∏—Ç—å –∫—Ä—É–ø–Ω—ã–µ IT-–∫–æ–º–ø–∞–Ω–∏–∏", 
            hint: "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—é", effect: { gdp: -1.2, exp: -0.8, imp: 0.3, cpi: 0.4, unemployment: 0.8 }, 
            tags: ["–ø—Ä–∞–≤–æ"], history: "–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ AT&T –≤ 1982 —Å—Ç–∏–º—É–ª–∏—Ä–æ–≤–∞–ª–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—é –≤ —Ç–µ–ª–µ–∫–æ–º–µ." },
          { id: "regulate-not-break", icon: "fa-solid fa-balance-scale", label: "–£—Å–∏–ª–∏—Ç—å —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è", 
            hint: "–ö–æ–Ω—Ç—Ä–æ–ª—å –±–µ–∑ —Ä–∞–∑—Ä—É—à–µ–Ω–∏—è", effect: { gdp: 0.5, exp: 0.2, imp: 0.1, cpi: 0.1, unemployment: -0.2 }, 
            tags: ["–ø—Ä–∞–≤–æ"], history: "–ï–° –≤—ã–±—Ä–∞–ª –ø—É—Ç—å —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ GDPR –∏ DMA." }
        ]
      }
    ],
    CN: [
      {
        id: "belt-road-expansion-cn", text: "üá®üá≥ –ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ \"–ü–æ—è—Å –∏ –ø—É—Ç—å\" —Ç—Ä–µ–±—É–µ—Ç –Ω–æ–≤—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –†–∞—Å—à–∏—Ä—è—Ç—å?", country: "CN",
        choices: [
          { id: "expand-bri", icon: "fa-solid fa-road", label: "–£–≤–µ–ª–∏—á–∏—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ BRI", 
            hint: "–ì–ª–æ–±–∞–ª—å–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ", effect: { gdp: -1.5, exp: 3.0, imp: 0.5, cpi: 0.8, unemployment: -2.5 }, 
            tags: ["–º–Ω–æ–≥–æ—Å—Ç–æ—Ä–æ–Ω–Ω–æ—Å—Ç—å"], history: "BRI —Å–≤—è–∑–∞–ª–∞ 140+ —Å—Ç—Ä–∞–Ω, —Å–æ–∑–¥–∞–≤ –Ω–æ–≤—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã." },
          { id: "focus-domestic", icon: "fa-solid fa-home", label: "–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º —Ä—ã–Ω–∫–µ", 
            hint: "–î–≤–æ–π–Ω–∞—è —Ü–∏—Ä–∫—É–ª—è—Ü–∏—è", effect: { gdp: 1.8, exp: -0.8, imp: 1.2, cpi: -0.3, unemployment: -1.8 }, 
            tags: ["—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å"], history: "–°—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–≤–æ–π–Ω–æ–π —Ü–∏—Ä–∫—É–ª—è—Ü–∏–∏ —Å–Ω–∏–∂–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞." }
        ]
      }
    ],
    DE: [
      {
        id: "auto-industry-transition-de", text: "üá©üá™ –ü–µ—Ä–µ—Ö–æ–¥ –∫ —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª—è–º —É–≥—Ä–æ–∂–∞–µ—Ç –∞–≤—Ç–æ–ø—Ä–æ–º—É. –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é?", country: "DE",
        choices: [
          { id: "ev-subsidies", icon: "fa-solid fa-car-battery", label: "–°—É–±—Å–∏–¥–∏–∏ –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–∏", 
            hint: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞", effect: { gdp: -0.8, exp: 2.5, imp: 1.0, cpi: 0.5, unemployment: -2.0 }, 
            tags: ["—Å—É–±—Å–∏–¥–∏–∏", "–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏"], history: "–ì–µ—Ä–º–∞–Ω–∏—è –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∞ –º–∏–ª–ª–∏–∞—Ä–¥—ã –≤ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª—è–º." },
          { id: "protect-ice", icon: "fa-solid fa-engine", label: "–ó–∞—â–∏—Ç–∏—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Å–≥–æ—Ä–∞–Ω–∏—è", 
            hint: "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç—Ä–∞–¥–∏—Ü–∏–π", effect: { gdp: 0.5, exp: -1.2, imp: -0.5, cpi: -0.2, unemployment: 1.5 }, 
            tags: ["–ø—Ä–æ—Ç–µ–∫—Ü–∏–æ–Ω–∏–∑–º"], history: "–ì–µ—Ä–º–∞–Ω–∏—è –ª–æ–±–±–∏—Ä–æ–≤–∞–ª–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–æ–ø–ª–∏–≤ –≤ –ï–°." }
        ]
      }
    ],
    JP: [
      {
        id: "aging-society-jp", text: "üáØüáµ –°—Ç–∞—Ä–µ—é—â–µ–µ –æ–±—â–µ—Å—Ç–≤–æ —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–µ —Ä–∞–±–æ—á–∏—Ö. –û—Ç–∫—Ä—ã—Ç—å –∏–º–º–∏–≥—Ä–∞—Ü–∏—é?", country: "JP",
        choices: [
          { id: "open-immigration", icon: "fa-solid fa-users", label: "–†–∞—Å—à–∏—Ä–∏—Ç—å —Ç—Ä—É–¥–æ–≤—É—é –∏–º–º–∏–≥—Ä–∞—Ü–∏—é", 
            hint: "–†–µ—à–µ–Ω–∏–µ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–±–ª–µ–º—ã", effect: { gdp: 2.0, exp: 1.0, imp: 1.5, cpi: 0.8, unemployment: -3.0 }, 
            tags: ["–æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å"], history: "–Ø–ø–æ–Ω–∏—è –º–µ–¥–ª–µ–Ω–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–≤–µ—Ä–∏ –¥–ª—è –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∏–≥—Ä–∞–Ω—Ç–æ–≤." },
          { id: "automation-focus", icon: "fa-solid fa-robot", label: "–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é", 
            hint: "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ", effect: { gdp: -1.0, exp: 2.5, imp: 0.8, cpi: -0.3, unemployment: 1.5 }, 
            tags: ["–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏"], history: "–Ø–ø–æ–Ω–∏—è –ª–∏–¥–∏—Ä—É–µ—Ç –≤ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–µ." }
        ]
      }
    ],
    BR: [
      {
        id: "amazon-deforestation-br", text: "üáßüá∑ –ï–° —É–≥—Ä–æ–∂–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–º–ø–æ—Ä—Ç –∏–∑-–∑–∞ –≤—ã—Ä—É–±–∫–∏ –ê–º–∞–∑–æ–Ω–∏–∏. –ö–∞–∫ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å?", country: "BR",
        choices: [
          { id: "environmental-measures", icon: "fa-solid fa-tree", label: "–£—Å–∏–ª–∏—Ç—å –∑–∞—â–∏—Ç—É –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã", 
            hint: "–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å", effect: { gdp: -1.5, exp: -0.8, imp: 0.5, cpi: 0.8, unemployment: 1.8 }, 
            tags: ["—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å"], history: "–ë—Ä–∞–∑–∏–ª–∏—è –ø–æ–¥ –¥–∞–≤–ª–µ–Ω–∏–µ–º —É—Å–∏–ª–∏–ª–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å –∑–∞ –≤—ã—Ä—É–±–∫–æ–π –ª–µ—Å–∞." },
          { id: "sovereignty-defense", icon: "fa-solid fa-flag", label: "–û—Ç—Å—Ç–∞–∏–≤–∞—Ç—å –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å—É–≤–µ—Ä–µ–Ω–∏—Ç–µ—Ç", 
            hint: "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –¥–µ–ª–∞", effect: { gdp: 0.8, exp: -2.0, imp: -0.8, cpi: -0.2, unemployment: -0.5 }, 
            tags: ["–æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–æ—Å—Ç—å"], history: "–ë—Ä–∞–∑–∏–ª–∏—è –æ—Ç–≤–µ—Ä–≥–∞–µ—Ç –≤–Ω–µ—à–Ω–µ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ –≤ –ø–æ–ª–∏—Ç–∏–∫—É –ê–º–∞–∑–æ–Ω–∏–∏." }
        ]
      }
    ]
  }
};

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
let gameState = {
  currentScreen: 'start',
  selectedCountry: null,
  gameMode: 'normal',
  currentTurn: 0,
  currentScenario: null,
  selectedChoice: null,
  economicState: { ...gameData.baseState },
  trust: 50,
  history: [],
  charts: {},
  usedScenarios: []
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', function() {
  console.log('DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã...');
  initializeGame();
});

function initializeGame() {
  renderCountries();
  setupEventListeners();
  showScreen('start');
  console.log('–ò–≥—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
}

function renderCountries() {
  const countriesGrid = document.getElementById('countriesGrid');
  if (!countriesGrid) {
    console.error('–≠–ª–µ–º–µ–Ω—Ç countriesGrid –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  countriesGrid.innerHTML = '';
  
  Object.entries(gameData.countries).forEach(([code, country]) => {
    const countryCard = document.createElement('div');
    countryCard.className = 'country-card';
    countryCard.setAttribute('data-country', code);
    
    countryCard.innerHTML = `
      <div class="country-flag">${country.flag}</div>
      <div class="country-name">${country.name}</div>
      <div class="country-specialties">${country.specialties.join(', ')}</div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è click
    countryCard.addEventListener('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      console.log('–ö–ª–∏–∫ –ø–æ —Å—Ç—Ä–∞–Ω–µ:', code, country.name);
      selectCountry(code);
    });
    
    countriesGrid.appendChild(countryCard);
  });
  
  console.log('–ö–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç—Ä–∞–Ω —Å–æ–∑–¥–∞–Ω—ã:', Object.keys(gameData.countries).length);
}

function selectCountry(countryCode) {
  console.log('–í—ã–±–∏—Ä–∞–µ–º —Å—Ç—Ä–∞–Ω—É:', countryCode);
  
  // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
  document.querySelectorAll('.country-card').forEach(card => {
    card.classList.remove('selected');
  });
  
  // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É
  const selectedCard = document.querySelector(`[data-country="${countryCode}"]`);
  if (selectedCard) {
    selectedCard.classList.add('selected');
    console.log('–ö–∞—Ä—Ç–æ—á–∫–∞ –≤—ã–¥–µ–ª–µ–Ω–∞:', countryCode);
  } else {
    console.error('–ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', countryCode);
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  gameState.selectedCountry = countryCode;
  console.log('–°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ, –≤—ã–±—Ä–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞:', gameState.selectedCountry);
  
  updateStartButton();
}

function updateStartButton() {
  const startBtn = document.getElementById('startGameBtn');
  const selectedMode = document.querySelector('input[name="gameMode"]:checked');
  
  console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ä—Ç–∞:', {
    hasStartBtn: !!startBtn,
    selectedCountry: gameState.selectedCountry,
    selectedMode: selectedMode ? selectedMode.value : null
  });
  
  if (startBtn && gameState.selectedCountry && selectedMode) {
    startBtn.disabled = false;
    gameState.gameMode = selectedMode.value;
    console.log('–ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞, —Ä–µ–∂–∏–º:', gameState.gameMode);
  } else if (startBtn) {
    startBtn.disabled = true;
    console.log('–ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
  }
}

function setupEventListeners() {
  console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π...');
  
  // –ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–∞
  const startBtn = document.getElementById('startGameBtn');
  if (startBtn) {
    startBtn.addEventListener('click', function(e) {
      e.preventDefault();
      console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —Å—Ç–∞—Ä—Ç–∞');
      console.log('–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', {
        selectedCountry: gameState.selectedCountry,
        gameMode: gameState.gameMode,
        disabled: startBtn.disabled
      });
      
      if (gameState.selectedCountry && gameState.gameMode && !startBtn.disabled) {
        console.log('–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã...');
        startGame();
      } else {
        console.log('–ò–≥—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω–∞ - –Ω–µ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã');
      }
    });
    console.log('–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ä—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  } else {
    console.error('–ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –†–∞–¥–∏–æ –∫–Ω–æ–ø–∫–∏ —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã
  const radioButtons = document.querySelectorAll('input[name="gameMode"]');
  console.log('–ù–∞–π–¥–µ–Ω–æ —Ä–∞–¥–∏–æ –∫–Ω–æ–ø–æ–∫:', radioButtons.length);
  
  radioButtons.forEach((radio, index) => {
    radio.addEventListener('change', function(e) {
      console.log('–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã:', e.target.value);
      gameState.gameMode = e.target.value;
      updateStartButton();
    });
    
    // –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
    radio.addEventListener('click', function(e) {
      console.log('–ö–ª–∏–∫ –ø–æ —Ä–∞–¥–∏–æ –∫–Ω–æ–ø–∫–µ:', e.target.value);
      gameState.gameMode = e.target.value;
      updateStartButton();
    });
    
    console.log(`–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–∞–¥–∏–æ –∫–Ω–æ–ø–∫–∏ ${index} (${radio.value}) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω`);
  });
  
  // –ö–Ω–æ–ø–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞
  const nextBtn = document.getElementById('nextTurnBtn');
  if (nextBtn) {
    nextBtn.addEventListener('click', function() {
      console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞');
      nextTurn();
    });
    console.log('–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  }
  
  // –ö–Ω–æ–ø–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const newGameBtn = document.getElementById('newGameBtn');
  if (newGameBtn) {
    newGameBtn.addEventListener('click', function() {
      console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–æ–≤–æ–π –∏–≥—Ä—ã');
      newGame();
    });
    console.log('–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–æ–≤–æ–π –∏–≥—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  }
  
  const exportBtn = document.getElementById('exportBtn');
  if (exportBtn) {
    exportBtn.addEventListener('click', function() {
      console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —ç–∫—Å–ø–æ—Ä—Ç–∞');
      exportResults();
    });
    console.log('–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  }
  
  console.log('–í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
}

function startGame() {
  console.log('–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –¥–ª—è —Å—Ç—Ä–∞–Ω—ã:', gameState.selectedCountry);
  
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  gameState.economicState = { ...gameData.baseState };
  gameState.trust = 50;
  gameState.history = [];
  gameState.usedScenarios = [];
  gameState.currentTurn = 1;
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã
  const countryModifiers = gameData.countries[gameState.selectedCountry].modifiers;
  Object.keys(countryModifiers).forEach(key => {
    gameState.economicState[key] += countryModifiers[key];
  });
  
  const country = gameData.countries[gameState.selectedCountry];
  const countryHeader = document.getElementById('selectedCountryName');
  if (countryHeader) {
    countryHeader.textContent = `${country.flag} ${country.name}`;
  }
  
  console.log('–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –∏–≥—Ä–æ–≤–æ–π —ç–∫—Ä–∞–Ω');
  showScreen('game');
  initializeCharts();
  updateGameDisplay();
  loadNextScenario();
}

function showScreen(screenName) {
  console.log('–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω:', screenName);
  
  document.querySelectorAll('.screen').forEach(screen => {
    screen.classList.remove('active');
  });
  
  const targetScreen = document.getElementById(screenName + 'Screen');
  if (targetScreen) {
    targetScreen.classList.add('active');
    gameState.currentScreen = screenName;
    console.log('–≠–∫—Ä–∞–Ω –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω:', screenName);
  } else {
    console.error('–≠–∫—Ä–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω:', screenName + 'Screen');
  }
}

function loadNextScenario() {
  console.log('–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è –¥–ª—è —Ö–æ–¥–∞:', gameState.currentTurn);
  
  // –£–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤—ã–±–æ—Ä–∞: 67% –æ–±—â–∏—Ö, 33% —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö
  let availableScenarios = [];
  const countrySpecific = scenarios.specific[gameState.selectedCountry] || [];
  
  if (countrySpecific.length > 0 && Math.random() < 0.33) {
    availableScenarios = countrySpecific.filter(scenario => 
      !gameState.usedScenarios.includes(scenario.id));
    console.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω—ã');
  }
  
  if (availableScenarios.length === 0) {
    availableScenarios = scenarios.general.filter(scenario => 
      !gameState.usedScenarios.includes(scenario.id));
    console.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏');
  }
  
  // –ï—Å–ª–∏ –≤—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º
  if (availableScenarios.length === 0) {
    gameState.usedScenarios = [];
    availableScenarios = [...scenarios.general];
    console.log('–°–±—Ä–æ—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤');
  }
  
  const randomScenario = availableScenarios[Math.floor(Math.random() * availableScenarios.length)];
  gameState.currentScenario = randomScenario;
  gameState.usedScenarios.push(randomScenario.id);
  gameState.selectedChoice = null;
  
  console.log('–í—ã–±—Ä–∞–Ω —Å—Ü–µ–Ω–∞—Ä–∏–π:', randomScenario.id);
  
  renderScenario();
}

function renderScenario() {
  const scenarioTitle = document.getElementById('scenarioTitle');
  const scenarioText = document.getElementById('scenarioText');
  const scenarioType = document.getElementById('scenarioType');
  const scenarioCounter = document.getElementById('scenarioCounter');
  
  if (scenarioTitle) {
    scenarioTitle.innerHTML = `<i class="fas fa-scroll"></i> –°—Ü–µ–Ω–∞—Ä–∏–π ${gameState.currentTurn}`;
  }
  
  if (scenarioText) {
    scenarioText.textContent = gameState.currentScenario.text;
  }
  
  if (scenarioType) {
    const isSpecific = gameState.currentScenario.country;
    scenarioType.textContent = isSpecific ? '–°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –¥–ª—è —Å—Ç—Ä–∞–Ω—ã' : '–û–±—â–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π';
  }
  
  if (scenarioCounter) {
    scenarioCounter.textContent = `–°—Ü–µ–Ω–∞—Ä–∏–π ${gameState.usedScenarios.length} –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö`;
  }
  
  const choicesContainer = document.getElementById('choicesContainer');
  if (!choicesContainer) {
    console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤—ã–±–æ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  choicesContainer.innerHTML = '';
  
  gameState.currentScenario.choices.forEach((choice) => {
    const choiceCard = document.createElement('div');
    choiceCard.className = 'choice-card';
    choiceCard.setAttribute('data-choice', choice.id);
    
    choiceCard.innerHTML = `
      <div class="choice-header">
        <i class="${choice.icon}"></i>
        <h3>${choice.label}</h3>
      </div>
      <p class="choice-hint">${choice.hint}</p>
    `;
    
    choiceCard.addEventListener('click', function() {
      selectChoice(choice);
    });
    
    choicesContainer.appendChild(choiceCard);
  });
  
  document.getElementById('effectsPanel').style.display = 'none';
  
  console.log('–°—Ü–µ–Ω–∞—Ä–∏–π –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω, –≤—ã–±–æ—Ä–æ–≤:', gameState.currentScenario.choices.length);
}

function selectChoice(choice) {
  console.log('–í—ã–±—Ä–∞–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ:', choice.label);
  
  document.querySelectorAll('.choice-card').forEach(card => {
    card.classList.remove('selected');
  });
  
  const selectedCard = document.querySelector(`[data-choice="${choice.id}"]`);
  if (selectedCard) {
    selectedCard.classList.add('selected');
  }
  
  gameState.selectedChoice = choice;
  showEffects(choice);
}

function showEffects(choice) {
  const effectsPanel = document.getElementById('effectsPanel');
  const effectsGrid = document.getElementById('effectsGrid');
  const historicalText = document.getElementById('historicalText');
  const nextBtn = document.getElementById('nextTurnBtn');
  
  effectsGrid.innerHTML = '';
  
  if (gameState.gameMode !== 'blind') {
    const effects = gameState.gameMode === 'hard' ? 
      multiplyEffects(choice.effect, 1.5) : choice.effect;
    
    const labels = {
      gdp: '–í–í–ü',
      exp: '–≠–∫—Å–ø–æ—Ä—Ç',
      imp: '–ò–º–ø–æ—Ä—Ç',
      cpi: '–ò–Ω—Ñ–ª—è—Ü–∏—è',
      unemployment: '–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞'
    };
    
    Object.entries(effects).forEach(([key, value]) => {
      const effectItem = document.createElement('div');
      effectItem.className = `effect-item ${value > 0 ? 'positive' : value < 0 ? 'negative' : 'neutral'}`;
      
      const sign = value > 0 ? '+' : '';
      const suffix = ['cpi', 'unemployment'].includes(key) ? '%' : '';
      
      effectItem.innerHTML = `
        <div>${labels[key]}</div>
        <div>${sign}${value.toFixed(1)}${suffix}</div>
      `;
      
      effectsGrid.appendChild(effectItem);
    });
  } else {
    const placeholderItem = document.createElement('div');
    placeholderItem.className = 'effect-item neutral';
    placeholderItem.innerHTML = `
      <div>–≠—Ñ—Ñ–µ–∫—Ç—ã —Å–∫—Ä—ã—Ç—ã</div>
      <div>???</div>
    `;
    effectsGrid.appendChild(placeholderItem);
  }
  
  historicalText.textContent = choice.history || '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç.';
  
  effectsPanel.style.display = 'block';
  nextBtn.disabled = false;
}

function multiplyEffects(effects, multiplier) {
  const result = {};
  Object.entries(effects).forEach(([key, value]) => {
    result[key] = value * multiplier;
  });
  return result;
}

function nextTurn() {
  if (!gameState.selectedChoice) return;
  
  console.log('–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ö–æ–¥—É');
  
  const effects = gameState.gameMode === 'hard' ? 
    multiplyEffects(gameState.selectedChoice.effect, 1.5) : 
    gameState.selectedChoice.effect;
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã —Å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º–∏ –≤–∑–∞–∏–º–æ—Å–≤—è–∑—è–º–∏
  Object.entries(effects).forEach(([key, value]) => {
    if (key === 'gdp') key = 'gdpIdx';
    if (key === 'exp') key = 'expIdx';
    if (key === 'imp') key = 'impIdx';
    
    gameState.economicState[key] += value;
  });
  
  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö
  gameState.economicState.gdpIdx = Math.max(20, Math.min(200, gameState.economicState.gdpIdx));
  gameState.economicState.expIdx = Math.max(10, Math.min(300, gameState.economicState.expIdx));
  gameState.economicState.impIdx = Math.max(10, Math.min(300, gameState.economicState.impIdx));
  gameState.economicState.cpi = Math.max(-2, Math.min(25, gameState.economicState.cpi));
  gameState.economicState.unemployment = Math.max(0, Math.min(30, gameState.economicState.unemployment));
  
  updateTrust();
  
  gameState.history.push({
    turn: gameState.currentTurn,
    scenario: gameState.currentScenario.text,
    choice: gameState.selectedChoice.label,
    effects: effects,
    state: { ...gameState.economicState },
    trust: gameState.trust
  });
  
  gameState.currentTurn++;
  
  if (gameState.currentTurn > gameData.stepsTotal) {
    showResults();
  } else {
    updateGameDisplay();
    loadNextScenario();
  }
}

function updateTrust() {
  let trustChange = 0;
  
  // –í–ª–∏—è–Ω–∏–µ —Ä–µ—à–µ–Ω–∏–π –Ω–∞ –¥–æ–≤–µ—Ä–∏–µ
  if (gameState.selectedChoice.tags) {
    gameState.selectedChoice.tags.forEach(tag => {
      if (gameData.trustWeights[tag]) {
        trustChange += gameData.trustWeights[tag];
      }
    });
  }
  
  // –®—Ç—Ä–∞—Ñ –∑–∞ –∏–Ω—Ñ–ª—è—Ü–∏—é
  if (gameState.economicState.cpi > 3.0) {
    trustChange -= (gameState.economicState.cpi - 3.0) * 0.8;
  }
  
  // –ù–û–í–´–ô —à—Ç—Ä–∞—Ñ –∑–∞ –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—É
  if (gameState.economicState.unemployment > 7.0) {
    trustChange -= (gameState.economicState.unemployment - 7.0) * 0.3;
  }
  
  gameState.trust = Math.max(0, Math.min(100, gameState.trust + trustChange));
}

function updateGameDisplay() {
  document.getElementById('currentTurn').textContent = gameState.currentTurn;
  document.getElementById('currentPeriod').textContent = 
    `Q${((gameState.currentTurn - 1) % 4) + 1} –ì–æ–¥ ${Math.ceil(gameState.currentTurn / 4)}`;
  
  const progressPercent = ((gameState.currentTurn - 1) / gameData.stepsTotal) * 100;
  document.getElementById('progressFill').style.width = `${progressPercent}%`;
  
  updateIndicators();
  updateCharts();
}

function updateIndicators() {
  const state = gameState.economicState;
  const base = gameData.baseState;
  
  document.getElementById('gdpValue').textContent = state.gdpIdx.toFixed(1);
  updateIndicatorStyle('gdpIndicator', state.gdpIdx, base.gdpIdx);
  
  document.getElementById('expValue').textContent = state.expIdx.toFixed(1);
  updateIndicatorStyle('expIndicator', state.expIdx, base.expIdx);
  
  document.getElementById('impValue').textContent = state.impIdx.toFixed(1);
  updateIndicatorStyle('impIndicator', state.impIdx, base.impIdx);
  
  document.getElementById('cpiValue').textContent = state.cpi.toFixed(1) + '%';
  updateIndicatorStyle('cpiIndicator', state.cpi, base.cpi, true);
  
  document.getElementById('unemploymentValue').textContent = state.unemployment.toFixed(1) + '%';
  updateIndicatorStyle('unemploymentIndicator', state.unemployment, base.unemployment, true);
  
  document.getElementById('trustValue').textContent = Math.round(gameState.trust);
  updateIndicatorStyle('trustIndicator', gameState.trust, 50);
}

function updateIndicatorStyle(elementId, current, base, inverse = false) {
  const element = document.getElementById(elementId);
  if (!element) return;
  
  element.classList.remove('positive', 'negative');
  
  const isPositive = inverse ? current < base : current > base;
  const isNegative = inverse ? current > base : current < base;
  
  if (Math.abs(current - base) > 0.1) {
    if (isPositive) {
      element.classList.add('positive');
    } else if (isNegative) {
      element.classList.add('negative');
    }
  }
}

function initializeCharts() {
  console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤');
  
  const chartConfigs = [
    { id: 'gdpChart', label: '–í–í–ü –∏–Ω–¥–µ–∫—Å', color: '#1FB8CD', key: 'gdpIdx' },
    { id: 'expChart', label: '–≠–∫—Å–ø–æ—Ä—Ç –∏–Ω–¥–µ–∫—Å', color: '#FFC185', key: 'expIdx' },
    { id: 'impChart', label: '–ò–º–ø–æ—Ä—Ç –∏–Ω–¥–µ–∫—Å', color: '#B4413C', key: 'impIdx' },
    { id: 'cpiChart', label: '–ò–Ω—Ñ–ª—è—Ü–∏—è (%)', color: '#DB4545', key: 'cpi' },
    { id: 'unemploymentChart', label: '–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞ (%)', color: '#D2BA4C', key: 'unemployment' }
  ];
  
  chartConfigs.forEach(config => {
    const canvas = document.getElementById(config.id);
    if (!canvas) return;
    
    const ctx = canvas.getContext('2d');
    gameState.charts[config.key] = new Chart(ctx, {
      type: 'line',
      data: {
        labels: ['–°—Ç–∞—Ä—Ç'],
        datasets: [{
          label: config.label,
          data: [gameState.economicState[config.key]],
          borderColor: config.color,
          backgroundColor: config.color + '20',
          borderWidth: 2,
          tension: 0.1,
          fill: true
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: { display: false },
          title: {
            display: true,
            text: config.label,
            color: '#626c71'
          }
        },
        scales: {
          y: {
            beginAtZero: false,
            grid: { color: 'rgba(94, 82, 64, 0.1)' },
            ticks: { color: '#626c71' }
          },
          x: {
            grid: { color: 'rgba(94, 82, 64, 0.1)' },
            ticks: { color: '#626c71' }
          }
        }
      }
    });
  });
}

function updateCharts() {
  const turnLabel = `–•–æ–¥ ${gameState.currentTurn - 1}`;
  
  Object.entries(gameState.charts).forEach(([key, chart]) => {
    if (chart) {
      chart.data.labels.push(turnLabel);
      chart.data.datasets[0].data.push(gameState.economicState[key]);
      chart.update('none');
    }
  });
}

function showResults() {
  calculateFinalScore();
  renderResults();
  showScreen('results');
}

function calculateFinalScore() {
  const state = gameState.economicState;
  const base = gameData.baseState;
  
  const changes = {
    gdp: state.gdpIdx - base.gdpIdx,
    exp: state.expIdx - base.expIdx,
    imp: state.impIdx - base.impIdx,
    cpi: state.cpi - base.cpi,
    unemployment: state.unemployment - base.unemployment
  };
  
  let score = 0;
  score += changes.gdp * 2;      // –í–í–ü –≤–∞–∂–Ω–µ–µ –≤—Å–µ–≥–æ
  score += changes.exp * 1.5;    // –≠–∫—Å–ø–æ—Ä—Ç –≤–∞–∂–µ–Ω –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏
  score += changes.imp * 0.5;    // –ò–º–ø–æ—Ä—Ç –º–µ–Ω–µ–µ –∫—Ä–∏—Ç–∏—á–µ–Ω
  score -= changes.cpi * 10;     // –ò–Ω—Ñ–ª—è—Ü–∏—è –æ—á–µ–Ω—å –Ω–µ–≥–∞—Ç–∏–≤–Ω–∞
  score -= changes.unemployment * 8; // –ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞ –∫—Ä–∏—Ç–∏—á–Ω–∞
  score += (gameState.trust - 50) * 0.5; // –î–æ–≤–µ—Ä–∏–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –∏—Ç–æ–≥–æ–≤—É—é –æ—Ü–µ–Ω–∫—É
  
  gameState.finalScore = Math.round(score);
  gameState.changes = changes;
}

function renderResults() {
  const state = gameState.economicState;
  const changes = gameState.changes;
  
  document.getElementById('resultsSubtitle').textContent = 
    `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è ${gameData.countries[gameState.selectedCountry].name}`;
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  document.getElementById('finalGdp').textContent = state.gdpIdx.toFixed(1);
  document.getElementById('gdpChange').textContent = formatChange(changes.gdp);
  document.getElementById('gdpChange').className = `change-value ${getChangeClass(changes.gdp)}`;
  
  document.getElementById('finalExp').textContent = state.expIdx.toFixed(1);
  document.getElementById('expChange').textContent = formatChange(changes.exp);
  document.getElementById('expChange').className = `change-value ${getChangeClass(changes.exp)}`;
  
  document.getElementById('finalImp').textContent = state.impIdx.toFixed(1);
  document.getElementById('impChange').textContent = formatChange(changes.imp);
  document.getElementById('impChange').className = `change-value ${getChangeClass(changes.imp)}`;
  
  document.getElementById('finalCpi').textContent = state.cpi.toFixed(1) + '%';
  document.getElementById('cpiChange').textContent = formatChange(changes.cpi, '%');
  document.getElementById('cpiChange').className = `change-value ${getChangeClass(changes.cpi, true)}`;
  
  document.getElementById('finalUnemployment').textContent = state.unemployment.toFixed(1) + '%';
  document.getElementById('unemploymentChange').textContent = formatChange(changes.unemployment, '%');
  document.getElementById('unemploymentChange').className = `change-value ${getChangeClass(changes.unemployment, true)}`;
  
  document.getElementById('finalTrust').textContent = Math.round(gameState.trust);
  document.getElementById('trustExplanation').textContent = getTrustExplanation();
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –¥–æ–≤–µ—Ä–∏—è
  const trustFill = document.getElementById('trustFill');
  if (trustFill) {
    trustFill.style.width = `${gameState.trust}%`;
  }
  
  document.getElementById('finalScore').textContent = gameState.finalScore;
  document.getElementById('scoreDescription').textContent = getScoreDescription();
  
  createFinalChart();
}

function formatChange(value, suffix = '') {
  const sign = value > 0 ? '+' : '';
  return `${sign}${value.toFixed(1)}${suffix}`;
}

function getChangeClass(value, inverse = false) {
  if (Math.abs(value) < 0.1) return 'neutral';
  if (inverse) {
    return value < 0 ? 'positive' : 'negative';
  } else {
    return value > 0 ? 'positive' : 'negative';
  }
}

function getTrustExplanation() {
  const trust = gameState.trust;
  if (trust >= 80) {
    return "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ–µ –¥–æ–≤–µ—Ä–∏–µ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞. –í–∞—à–∞ –ø–æ–ª–∏—Ç–∏–∫–∞ –±—ã–ª–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–π –∏ —Å–ø–æ—Å–æ–±—Å—Ç–≤–æ–≤–∞–ª–∞ —É–∫—Ä–µ–ø–ª–µ–Ω–∏—é —Ç–æ—Ä–≥–æ–≤—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.";
  } else if (trust >= 60) {
    return "–•–æ—Ä–æ—à–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è. –í —Ü–µ–ª–æ–º –≤–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è –±—ã–ª–∏ —Ä–∞–∑—É–º–Ω—ã–º–∏ –∏ —Å–ø–æ—Å–æ–±—Å—Ç–≤–æ–≤–∞–ª–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏.";
  } else if (trust >= 40) {
    return "–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ä–µ—à–µ–Ω–∏—è –≤—ã–∑–≤–∞–ª–∏ –æ–±–µ—Å–ø–æ–∫–æ–µ–Ω–Ω–æ—Å—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤, –Ω–æ –æ–±—â–∏–π –∫—É—Ä—Å –æ—Å—Ç–∞–ª—Å—è –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º.";
  } else if (trust >= 20) {
    return "–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è. –ú–Ω–æ–≥–∏–µ —Ä–µ—à–µ–Ω–∏—è –±—ã–ª–∏ –≤–æ—Å–ø—Ä–∏–Ω—è—Ç—ã –∫–∞–∫ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –∏–ª–∏ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–µ, —á—Ç–æ –æ—Å–ª–æ–∂–Ω–∏–ª–æ —Ç–æ—Ä–≥–æ–≤—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è.";
  } else {
    return "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–æ–µ –¥–æ–≤–µ—Ä–∏–µ. –í–∞—à–∞ –ø–æ–ª–∏—Ç–∏–∫–∞ —Å–µ—Ä—å—ë–∑–Ω–æ –ø–æ–¥–æ—Ä–≤–∞–ª–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∏ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –∏–∑–æ–ª—è—Ü–∏–∏.";
  }
}

function getScoreDescription() {
  const score = gameState.finalScore;
  if (score >= 50) {
    return "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –±—ã–ª–∞ –æ—á–µ–Ω—å —É—Å–ø–µ—à–Ω–æ–π. –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –≤—ã–¥–∞—é—â–∏—Ö—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.";
  } else if (score >= 20) {
    return "–û—Ç–ª–∏—á–Ω–æ! –≠–∫–æ–Ω–æ–º–∏–∫–∞ –ø–æ–∫–∞–∑–∞–ª–∞ —Å–∏–ª—å–Ω—ã–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–∏ —Ä–∞–∑—É–º–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–æ–π –ø–æ–ª–∏—Ç–∏–∫–µ.";
  } else if (score >= 0) {
    return "–•–æ—Ä–æ—à–æ. –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —É–ª—É—á—à–∏–ª–∏—Å—å, —Ö–æ—Ç—è –µ—Å—Ç—å –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è.";
  } else if (score >= -20) {
    return "–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ. –ï—Å—Ç—å –∫–∞–∫ —É—Å–ø–µ—Ö–∏, —Ç–∞–∫ –∏ –ø—Ä–æ–±–ª–µ–º—ã. –ü–æ–ª–∏—Ç–∏–∫–∞ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–µ.";
  } else if (score >= -40) {
    return "–ù–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ. –≠–∫–æ–Ω–æ–º–∏–∫–∞ —Å—Ç–æ–ª–∫–Ω—É–ª–∞—Å—å —Å —Å–µ—Ä—å—ë–∑–Ω—ã–º–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏ –∏–∑-–∑–∞ –ø—Ä–∏–Ω—è—Ç—ã—Ö —Ä–µ—à–µ–Ω–∏–π.";
  } else {
    return "–ö—Ä–∏—Ç–∏—á–Ω–æ! –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ –ø—Ä–∏–≤–µ–ª–∞ –∫ —Å–µ—Ä—å—ë–∑–Ω–æ–º—É –∫—Ä–∏–∑–∏—Å—É. –¢—Ä–µ–±—É–µ—Ç—Å—è –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ—Å–º–æ—Ç—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.";
  }
}

function createFinalChart() {
  const canvas = document.getElementById('finalChart');
  if (!canvas) return;
  
  const ctx = canvas.getContext('2d');
  
  const labels = ['–°—Ç–∞—Ä—Ç'];
  gameState.history.forEach((_, index) => {
    labels.push(`–•–æ–¥ ${index + 1}`);
  });
  
  const gdpData = [gameData.baseState.gdpIdx + gameData.countries[gameState.selectedCountry].modifiers.gdpIdx];
  const expData = [gameData.baseState.expIdx + gameData.countries[gameState.selectedCountry].modifiers.expIdx];
  const impData = [gameData.baseState.impIdx + gameData.countries[gameState.selectedCountry].modifiers.impIdx];
  const trustData = [50];
  
  gameState.history.forEach(h => {
    gdpData.push(h.state.gdpIdx);
    expData.push(h.state.expIdx);
    impData.push(h.state.impIdx);
    trustData.push(h.trust);
  });
  
  new Chart(ctx, {
    type: 'line',
    data: {
      labels: labels,
      datasets: [
        {
          label: '–í–í–ü –∏–Ω–¥–µ–∫—Å',
          data: gdpData,
          borderColor: '#1FB8CD',
          backgroundColor: '#1FB8CD20',
          borderWidth: 2,
          tension: 0.1,
          yAxisID: 'y'
        },
        {
          label: '–≠–∫—Å–ø–æ—Ä—Ç –∏–Ω–¥–µ–∫—Å', 
          data: expData,
          borderColor: '#FFC185',
          backgroundColor: '#FFC18520',
          borderWidth: 2,
          tension: 0.1,
          yAxisID: 'y'
        },
        {
          label: '–ò–º–ø–æ—Ä—Ç –∏–Ω–¥–µ–∫—Å',
          data: impData,
          borderColor: '#B4413C',
          backgroundColor: '#B4413C20',
          borderWidth: 2,
          tension: 0.1,
          yAxisID: 'y'
        },
        {
          label: '–î–æ–≤–µ—Ä–∏–µ',
          data: trustData,
          borderColor: '#5D878F',
          backgroundColor: '#5D878F20',
          borderWidth: 2,
          tension: 0.1,
          yAxisID: 'y1'
        }
      ]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      interaction: {
        intersect: false,
        mode: 'index'
      },
      plugins: {
        legend: {
          display: true,
          position: 'top'
        }
      },
      scales: {
        y: {
          type: 'linear',
          display: true,
          position: 'left',
          beginAtZero: false,
          title: {
            display: true,
            text: '–ò–Ω–¥–µ–∫—Å—ã'
          },
          grid: { color: 'rgba(94, 82, 64, 0.1)' },
          ticks: { color: '#626c71' }
        },
        y1: {
          type: 'linear',
          display: true,
          position: 'right',
          min: 0,
          max: 100,
          title: {
            display: true,
            text: '–î–æ–≤–µ—Ä–∏–µ'
          },
          grid: {
            drawOnChartArea: false,
          },
          ticks: { color: '#626c71' }
        },
        x: {
          grid: { color: 'rgba(94, 82, 64, 0.1)' },
          ticks: { color: '#626c71' }
        }
      }
    }
  });
}

function newGame() {
  Object.values(gameState.charts).forEach(chart => {
    if (chart && chart.destroy) {
      chart.destroy();
    }
  });
  
  gameState = {
    currentScreen: 'start',
    selectedCountry: null,
    gameMode: 'normal',
    currentTurn: 0,
    currentScenario: null,
    selectedChoice: null,
    economicState: { ...gameData.baseState },
    trust: 50,
    history: [],
    charts: {},
    usedScenarios: []
  };
  
  document.querySelectorAll('.country-card').forEach(card => {
    card.classList.remove('selected');
  });
  
  document.querySelectorAll('input[name="gameMode"]').forEach(radio => {
    radio.checked = radio.value === 'normal';
  });
  
  updateStartButton();
  showScreen('start');
}

function exportResults() {
  const results = {
    country: gameData.countries[gameState.selectedCountry].name,
    countryCode: gameState.selectedCountry,
    mode: gameState.gameMode,
    initialState: gameData.baseState,
    finalState: gameState.economicState,
    changes: gameState.changes,
    finalTrust: gameState.trust,
    finalScore: gameState.finalScore,
    decisions: gameState.history.map(h => ({
      turn: h.turn,
      scenario: h.scenario,
      choice: h.choice,
      effects: h.effects,
      economicState: h.state,
      trust: h.trust
    })),
    summary: {
      totalTurns: gameData.stepsTotal,
      gameVersion: "4.0",
      completedAt: new Date().toISOString()
    }
  };
  
  const dataStr = JSON.stringify(results, null, 2);
  const dataBlob = new Blob([dataStr], {type: 'application/json'});
  
  const link = document.createElement('a');
  link.href = URL.createObjectURL(dataBlob);
  link.download = `trade_wars_v4_${gameState.selectedCountry}_${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.json`;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
}